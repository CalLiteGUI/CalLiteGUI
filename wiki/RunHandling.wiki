#summary Notes from 5/31/2013 call - on checking progress of CalLite run and handling Hydroclimate realizations.

= States =

  * [[Ready to parse - possible jvm error]] - no PROGRESS.TXT or WRESLCHECK.log


  * Parsing - NO PROGRESS.TXT, WRESLCHECK.log file is open, or does not contain "COMPLETED" string 


  * Done parsing - NO PROGRESS.TXT, WRESLCHECK.log file is closed and contains "COMPLETED" string. Check for "TOTAL ERRORS" to determine success.


  * Running - year xxxx of yyyy - PROGRESS.TXT exists [, no WRIMS run error file(s)]


  * Done running, error - PROGRESS.TXT exists, last line "RUN STOPPED - ERROR" [, WRIMS run error file(s) exist]


  * Done running, success: PROGRESS.TXT exists, last line "RUN COMPLETED" [, no WRIMS run error file(s)]


= Hydroclimate =

 * countHydroClimateRuns(scenario) -> 1-5

 * >1 : scenario_q1.cls, ... scenario_q5.cls -> RunDetail\scenario_q1, ...; Scenarios\scenario_q1_DV.dss

  **  : scenario.cls -> RunDetail\scenario_q1, RunDetail\scenario_q2

  **  : scenario.cls -> RunDetail\scenario w/5 config files 

---

Run_1_Scenario method

Batch_Scenario method

mapOfSVNames(scenario) -> map: ("q1",first_svfilename) ("q2",


D1641@5realizations

D1641_q1.cls 

---

= Requirement for run/batch run ==

  * Run: starts a run for the scenario currently in memory, forcing a save first if the scenario in memory does not match the saved scenario of the same name.
    * If the scenario has a single realization (no CC, or just one CC choice on hydroclimate page, just run the scenario.
    * If the scenario includes multiple realizations, create a scenario subdirectory for each realization by programmatically creating and saving new scenario files for each realization, then running each of the realization scenarios (named scenario_ccc1, scenario cc2, etc.) 

  * Batch run: Starts runs for each scenario selected by the user and passed as a list of filenames. For each scenario,
    * If the scenario has a single realization (no CC, or just one CC choice on hydroclimate page, just run the scenario.
    * If the scenario includes multiple realizations, create a scenario subdirectory for each realization by programmatically creating and saving new scenario files for each realization, then running each of the realization scenarios (named scenario_ccc1, scenario cc2, etc.) 

Suggested approach: Add a method that takes a scenario name and:

  #. Checks for multiple realizations, then
  #. Creates and saves realization scenarios
  #. Loops through list of realizations for scenario,
    * Runs each realization
    * Adds realization scenario to run monitor list (new class)

New method will be called from FileAction.actionPerformed.

    